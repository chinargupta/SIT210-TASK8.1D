import RPi.GPIO as GPIO
import time
from rpi_lcd import LCD

lcd = LCD()
GPIO.setmode(GPIO.BOARD)  # GPIO Mode which is set to board

GPIO_TRIGGER = 8  # Setting GPIO Pins
GPIO_ECHO = 10

SET_DISTANCE = 25  # Setting maximum distance

# Initializing LCD

GPIO.setup(GPIO_TRIGGER, GPIO.OUT)  # Set GPIO direction (IN / OUT)
GPIO.setup(GPIO_ECHO, GPIO.IN)

def distance():
    GPIO.output(GPIO_TRIGGER, True)  # Set Trigger pin to HIGH to trigger the signal

    time.sleep(0.00001)  # Set Trigger to LOW after 0.01ms to avoid re-triggering
    GPIO.output(GPIO_TRIGGER, False)

    StartTime = time.time()  # Initializing two variables for time difference
    StopTime = time.time()

    while GPIO.input(GPIO_ECHO) == 0:  # Store StartTime
        StartTime = time.time()

    while GPIO.input(GPIO_ECHO) == 1:  # Store time of arrival
        StopTime = time.time()

    TimeElapsed = StopTime - StartTime  # Time difference between start and arrival

    # Multiply with the speed of sound (34300 cm/s) and divide by 2, as it's a round trip
    distance = (TimeElapsed * 34300) / 2
    x = int(distance)
    return x

try:
    while True:
        dist = distance()
        msg = str(dist) + " cm"

        print("Measured Distance = %.1f cm" % dist)
        lcd.text("Distance:", 1)
        lcd.text(msg, 2)
        time.sleep(0.01)

except KeyboardInterrupt:
    print("\nProgram is stopped")

finally:
    GPIO.cleanup()  # Cleanup the GPIO pins when the program ends
